# Задача-1
# У вас есть список(list) IP адрессов. Вам необходимо создать
# класс который будет иметь методы:
# 1) Получить список IP адресов
# 2) Получить список IP адресов в развернутом виде
# (10.11.12.13 -> 13.12.11.10)
# 3) Получить список IP адресов без первых октетов
# (10.11.12.13 -> 11.12.13)
# 4) Получить список последних октетов IP адресов
# (10.11.12.13 -> 13)
class Ip:
    def __init__(self, ip):
        self._ip = ip

    def get_ip(self):
        return self._ip

    def get_ip_expand(self):
        for item in self._ip:
            self.ip_expand = item.split('.')
            self.ip_expand = '.'.join(self.ip_expand[::-1])
            print(f'{self.ip_expand}')

    def get_ip_without_first(self):
        for item in self._ip:
            self.ip_without_first = item[3:]
            print(self.ip_without_first)

    def get_last_ip(self):
        for item in self._ip:
            self.last_ip = item[-2:]
            print(self.last_ip)

d=Ip(['12.13.15.14', '10.11.12.13'])
d.get_ip()
d.get_ip_expand()
d.get_ip_without_first()
d.get_last_ip()

# Задача-2
# У вас несколько JSON файлов. В каждом из этих файлов есть
# произвольная структура данных. Вам необходимо написать
# класс который будет описывать работу с этими файлами, а
# именно:
# 1) Запись в файл
# 2) Чтение из файла
# 3) Объединение данных из файлов в новый файл
# 4) Получить путь относительный путь к файлу
# 5) Получить абсолютный путь к файлу
# 
# Задача-3
#
# Создайте класс который будет хранить параметры для
# подключения к физическому юниту(например switch). В своем
# списке атрибутов он должен иметь минимальный набор
# (unit_name, mac_address, ip_address, login, password).
# Вы должны описать каждый из этих атрибутов в виде гетеров и
# сеттеров(@property). У вас должна быть возможность
# получения и назначения этих атрибутов в классе.
